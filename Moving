using UnityEngine;
using System.Collections;
using UnityEngine.UI;

public class CatMove : MonoBehaviour
{

    public float moveSpeed;
    public float jumpSpeed;
    public float rotateSpeed;
    public AudioClip sound;
    public AudioClip walkingSound;
    public AudioClip jumpSound;
    CharacterController controller;
    AudioSource audio;
    
    public float gravity = 9.8f;
    protected bool jump;
    protected bool doublejump;
    Vector3 currentmovement;

    float MaxHealth;
    float currHealth;
    public Slider healthBarSlider;  //reference for slider
    float soundTimer;

    // Use this for initialization

    void Start()
    {
        moveSpeed = 8.0f;
        jumpSpeed = 10.0f;
        rotateSpeed = 160;
        soundTimer = 0;
        controller = GetComponent<CharacterController>();
        audio = GetComponent<AudioSource>();
        jump = false;
        doublejump = false;

    }
    public void OnCollisionEnter(Collision other)
    {
        if (other.gameObject.tag == "insulin")
        {
            healthBarSlider.value += 0.8f;
            audio.PlayOneShot(sound);

            Destroy(other.gameObject);
        }

        else if (other.gameObject.tag == "Food")
        {
            healthBarSlider.value -= 0.3f;
            Destroy(other.gameObject);
        }
    }
    // Update is called once per frame
    void Update()
    {
        currentmovement.x = 1;
        currentmovement = new Vector3(currentmovement.x * moveSpeed, currentmovement.y, currentmovement.z);
        healthBarSlider.value -= .00011f;

        if (!controller.isGrounded)
        {
            currentmovement -= new Vector3(0, gravity * Time.deltaTime * 2, 0);
        }
        else
            currentmovement.y = 0;

        if (Input.GetKeyDown(KeyCode.Space)) 	//jump
        {
            if (controller.isGrounded)
            {
                audio.PlayOneShot(jumpSound);
                healthBarSlider.value -= .011f;
                currentmovement.y = jumpSpeed;

                doublejump = true;

            }
            else
            {
                if (doublejump)
                {
                    doublejump = false;
                    currentmovement.y = jumpSpeed;
                    audio.PlayOneShot(jumpSound);
                }
            }
        }
        controller.Move(currentmovement * Time.deltaTime);

        //}
        
            if (controller.isGrounded)
            {
                soundTimer++;
                if (soundTimer == 10)
                {
                    audio.PlayOneShot(walkingSound);
                    soundTimer = 0;
                }
            }
    }
}
